<!doctype html>
<html lang="zxx">

<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>aranoz</title>
  <link rel="icon" href="../../img/favicon.png">
  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="../../css/bootstrap.min.css">
  <!-- animate CSS -->
  <link rel="stylesheet" href="../../css/animate.css">
  <!-- owl carousel CSS -->
  <link rel="stylesheet" href="../../css/owl.carousel.min.css">
  <link rel="stylesheet" href="../../css/lightslider.min.css">
  <!-- font awesome CSS -->
  <link rel="stylesheet" href="../../css/all.css">
  <!-- flaticon CSS -->
  <link rel="stylesheet" href="../../css/flaticon.css">
  <link rel="stylesheet" href="../../css/themify-icons.css">
  <!-- font awesome CSS -->
  <link rel="stylesheet" href="css/magnific-popup.css">
  <!-- style CSS -->
  <link rel="stylesheet" href="../../css/style.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-zoom/1.7.21/jquery.zoom.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <style>
  .main-image-container {
    text-align: center;
}

.main-image {
    width: 80%;
    height: auto;
    padding: 5px;
}

.small-image-container {
    text-align: center;
}

.small-image {
    max-width: 100%;
    height: 100px; /* Adjust the height for thumbnails */
    cursor: pointer;
    border: 1px solid #ddd;
    padding: 5px;
    transition: transform 0.3s;
}

.small-image:hover {
    transform: scale(1.1);
}
@keyframes blink {
    0% { opacity: 1; color: red; }
    50% { opacity: 0; color: red; }
    100% { opacity: 1; color: red; }
}

.blinking-text {
    animation: blink 1s infinite;
    font-weight: bold; /* Optional: to make the text stand out more */
}
/* Review Section Styling */
.review-section-card {
  border: 1px solid #ddd;
  border-radius: 5px;
  padding: 20px;
  margin-top: 20px;
}

.review-card {
  border: none;
  margin-bottom: 10px;
}

.review-card .card-body {
  padding: 10px;
}

.reviews-summary a {
  color: blue;
  text-decoration: underline;
}

#more-link, #less-link {
  color: blue;
  cursor: pointer;
  text-decoration: underline;
  margin-top: 10px;
  display: block;
}

/* Star filled color */
.star-filled {
  color: #FFD700; /* Gold color for filled stars */
}

/* Modal Styling */
.modal {
  display: none;
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.4);
}

.modal-content {
  background-color: #fff;
  margin: 15% auto;
  padding: 20px;
  border: 1px solid #888;
  width: 80%;
  max-width: 400px;
}

.close {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: black;
  text-decoration: none;
  cursor: pointer;
}

/* Responsive */
@media (max-width: 768px) {
  .modal-content {
    width: 90%;
    padding: 10px;
  }
}
/* Modal Styling */
.modal {
    display: none;
    position: fixed;
    z-index: 1050;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    background-color: rgba(0, 0, 0, 0.7); /* Transparent background */
    transition: opacity 0.3s ease-in-out;
}

.modal-content {
    position: relative;
    margin: 10% auto;
    padding: 20px;
    background-color: #fff;
    border-radius: 8px;
    width: 100%;
    max-width: 500px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    animation: fadeIn 0.4s ease-in-out;
}

/* Close button */
.close {
    position: absolute;
    top: 10px;
    right: 15px;
    color: #333;
    font-size: 24px;
    font-weight: bold;
    cursor: pointer;
    transition: color 0.2s;
}

.close:hover {
    color: red;
}

/* Modal animations */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(-20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Form styling inside the modal */
.modal-content h2 {
    text-align: center;
    font-size: 24px;
    margin-bottom: 20px;
}

.modal-content form {
    display: flex;
    flex-direction: column;
}

.modal-content form label {
    margin-bottom: 5px;
    font-size: 16px;
}

.modal-content form select,
.modal-content form textarea,
.modal-content form input {
    width: 100%;
    padding: 10px;
    margin-bottom: 15px;
    border-radius: 5px;
    border: 1px solid #ddd;
    font-size: 14px;
}

.modal-content form button {
    background-color: #ff0077;
    color: white;
    padding: 10px;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s;
}

.modal-content form button:hover {
    background-color: #db305e;
}

/* Modal Responsiveness */
@media (max-width: 768px) {
    .modal-content {
        width: 90%;
        margin-top: 30%;
    }
}


</style>
</head>

<body>
    <%- include('header') %>

  <% if (product) { %>
  

  <!--================Single Product Area =================-->

  <div class="container padding_top">
    <div class="row s_product_inner justify-content-between">
        <div class="col-lg-7 col-xl-7">
            <div class="row">
                <!-- <div class="col-lg-9 col-xl-9">
                    <div class="product_slider_img">
                        <div id="mainImage" class="main-image-container">
                            <img id="currentImage" src="<%= product.productImage[0] %>" class="main-image img-fluid" />
                        </div>
                    </div>
                </div> -->
                <div class="col-lg-9 col-xl-9">
                  <div class="product_slider_img">
                    
                      <div id="mainImage" class="main-image-container" style="position: relative; overflow: hidden;">
                          <img id="currentImage" src="<%= product.productImage[0] %>" class="main-image img-fluid" />
                          <p><a href="/">Home</a> <span>-</span> <a href="/shop">Products</a><span>-</span><%= product ? product.productName : 'Product Unavailable' %></p>
                      </div>
                  </div>
              </div>
                <div class="col-lg-3 col-xl-3 d-flex align-items-start">
                    <div class="small_images">
                      
                        <% product.productImage.forEach((image, index) => { %>
                            <div class="small-image-container mb-3">
                                <img src="<%= image %>" class="small-image img-fluid" onclick="changeImage('<%= image %>')" />
                            </div>
                        <% }) %>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-5 col-xl-5">
            <div class="s_product_text">
                <h5>previous <span>|</span> next</h5>
                <h3><%= product.productName %></h3>
                 <h2><%= product.salePrice %> 
                 <% if (finalOffer > 0) { %>
                    <p class="blinking-text">Special Offer: <%= finalOffer %> Off</p>
                <% } %>
            </h2>
                <ul class="list">
                    <li>
                        <a class="active" href="#">
                            <span>Category</span> : <%= product.category.name %>
                        </a>
                    </li>
                    <li>
                      <a href="#">
                        <span>Availability</span> : 
                        <% if (product.quantity > 0) { %>
                            <span style="color: green;">In Stock</span>
                        <% } else { %>
                            <span style="color: red;">Out of Stock</span>
                        <% } %>
                    </a>
                    </li>
                </ul>
                <p><%= product.description %></p>
                <strong>Average Rating:</strong> <%= averageRating.toFixed(1) %> Stars
                <div class="card_area d-flex justify-content-between align-items-center">
                 
                    <button  class="btn_3 <%= wishlistItems.includes(product._id.toString()) ? 'active' : '' %>" 
                        data-product-id="<%= product._id %>" 
                        onclick="toggleWishlist(this, '<%= product._id %>')" >Add to wishlist</button>     
                          
                  <button onclick="addToCart('<%= product._id %>')" class="btn_3"<% if (product.isBlocked) { %>disabled<% } %>>Add to Cart</button>
              </div>
            </div>
        </div>
    </div>
</div>
<% } else { %>
  <div class="container padding_top">
    <h2>Product Unavailable</h2>
    <p>The product you are looking for is currently unavailable or has been blocked.</p>
 </div>
 <% } %>
</div>
<!--================End Single Product Area =================-->
<!-- Customer Reviews Section -->
<!-- Customer Reviews Section -->
<div class="container padding_top">
    <div class="row">
      <div class="col-lg-12">
        <div class="card review-section-card">
          <div class="card-body">
            <h3 class="font-weight-bold">Customer Reviews</h3>
            <div class="reviews-summary d-flex justify-content-between">
              <!-- Average rating stars -->
              <span class="average-rating">
                <% if (reviews.length > 0) { %>
                  <% for (let i = 1; i <= 5; i++) { %>
                    <% if (i <= Math.floor(averageRating)) { %>
                      <i class="fas fa-star star-filled"></i>
                    <% } else if (i === Math.ceil(averageRating)) { %>
                      <i class="fas fa-star-half-alt star-filled"></i>
                    <% } else { %>
                      <i class="far fa-star"></i>
                    <% } %>
                  <% } %>
                <% } %>
              </span>
              <span>Based on <%= reviews.length %> reviews</span>
              <a href="#" id="openReviewModal">Write a review</a>
            </div>
  
            <!-- Check if there are reviews -->
            <% if (reviews.length > 0) { %>
              <!-- Display the first review initially -->
              <div class="card review-card" id="single-review">
                <div class="card-body">
                  <strong><%= reviews[0].user.name %></strong>
                  <p><%= reviews[0].review %></p>
                  <div class="rating">
                    <% for (let i = 1; i <= 5; i++) { %>
                      <% if (i <= reviews[0].rating) { %>
                        <i class="fas fa-star star-filled"></i>
                      <% } else { %>
                        <i class="far fa-star"></i>
                      <% } %>
                    <% } %>
                  </div>
                </div>
              </div>
              <hr>
  
              <!-- Hidden reviews that will be shown when 'More' is clicked -->
              <div id="all-reviews" style="display: none;">
                <% reviews.forEach(function(review, index) { %>
                  <% if (index > 0) { %> <!-- Skip the first review -->
                    <div class="card review-card">
                      <div class="card-body">
                        <strong><%= review.user.name %></strong>
                        <p><%= review.review %></p>
                        <div class="rating">
                          <% for (let i = 1; i <= 5; i++) { %>
                            <% if (i <= review.rating) { %>
                              <i class="fas fa-star star-filled"></i>
                            <% } else { %>
                              <i class="far fa-star"></i>
                            <% } %>
                          <% } %>
                        </div>
                      </div>
                    </div>
                    <hr>
                  <% } %>
                <% }); %>
              </div>
  
              <!-- More/Less toggle links -->
              <a href="#" id="more-link" onclick="toggleReviews(true); return false;">More</a>
              <a href="#" id="less-link" style="display: none;" onclick="toggleReviews(false); return false;">Less</a>
            <% } else { %>
              <!-- No reviews yet -->
              <p>No reviews yet. Be the first to write one!</p>
            <% } %>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Write a Review Modal -->
<div id="reviewModal" class="modal" style="display:none;">
    <div class="modal-content">
      <span class="close">&times;</span>
      <h2>Write a Review</h2>
      <form id="review-form">
        <input type="hidden" id="product-id" name="product-id" value="<%= product._id %>">
        <label for="rating">Rate this product:</label>
        <select id="rating" name="rating" required>
          <option value="1">1 Star</option>
          <option value="2">2 Stars</option>
          <option value="3">3 Stars</option>
          <option value="4">4 Stars</option>
          <option value="5">5 Stars</option>
        </select>
  
        <label for="review">Write a Review:</label>
        <textarea id="review" name="review" required></textarea>
  
        <button class="btn_3" type="submit">Submit Review</button>
      </form>
    </div>
  </div>
  <!-- product_list part start-->
  <section class="product_list best_seller  padding_top">
    <div class="container">

      <div class="row justify-content-center">
        <div class="col-lg-12">
          <div class="section_tittle text-center">
            <h2>Related Products </h2>
          </div>
        </div>
      </div>
      <div class="row align-items-center justify-content-between">
        <% relatedProducts.forEach(relatedProduct => { %>
        <div class="col-lg-3 col-sm-6">
            <div class="single_product_item">
                <a href="/product/<%= relatedProduct._id %>">
                    <img src="<%= relatedProduct.productImage[0] %>" alt="<%= relatedProduct.productName %>" class="img-fluid">
                </a>
                <div class="single_product_text">
                    <h4><%= relatedProduct.productName %></h4>
                    <h3>₹<%= relatedProduct.salePrice %></h3>
                </div>
            </div>
           
        </div>
        <% }) %>
      </div>
    </div>
  </section>
  <!-- product_list part end-->

  <%- include('footer') %>


  <!-- jquery plugins here-->
  <!-- jquery -->
  <script>
       function incrementQuantity(productId) {
    const quantityInput = document.getElementById(`quantity-${productId}`);
    const max = parseInt(quantityInput.max);
    if (quantityInput.value < max) {
      quantityInput.value = parseInt(quantityInput.value) + 1;
    }
  }

  function decrementQuantity(productId) {
    const quantityInput = document.getElementById(`quantity-${productId}`);
    const min = parseInt(quantityInput.min);
    if (quantityInput.value > min) {
      quantityInput.value = parseInt(quantityInput.value) - 1;
    }
  }

    function addToCart(productId) {
        console.log('addToCart function called'); // Debug log
        const quantity = 1; 

        fetch('/cart/add', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ productId, quantity })
        }).then(response => {
        if (response.redirected) {
            // If the user is not authorized and the response is a redirect to the login page
            window.location.href = response.url;
            return; // Stop further processing
        }

        return response.json(); // This assumes the response is JSON if not redirected
    })
        .then(data => {
        console.log('Data received:', data); // Debug log
        if (data.success) {
        if (data.message === 'Product already in cart') {
          Swal.fire({
            icon: 'warning',
            title: 'Warning',
            text: 'This item is already in your cart!',
          });
        } else {
          Swal.fire({
            icon: 'success',
            title: 'Success',
            text: 'Product added to cart successfully!',
            showConfirmButton: false,
            timer: 1500,
          }).then(() => {
            const cartCountElement = document.getElementById('cart-count');
            cartCountElement.innerText = data.cartCount || 0; // Set cart count from session
          });
        }
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: data.message || 'Failed to add product to cart',
        });
      }
    })
    .catch((error) => console.error('Error:', error));
}
//review 


    const reviewForm = document.getElementById('review-form');
if (reviewForm) {
  reviewForm.addEventListener('submit', async function (event) {
    event.preventDefault();

    // Add a check to make sure the element exists
    const productIdElement = document.getElementById('product-id');
    if (!productIdElement) {
      console.error('Product ID element is missing');
      return; // Stop the form submission if product-id is missing
    }

    const rating = document.getElementById('rating').value;
    const review = document.getElementById('review').value;
    const productId = productIdElement.value; // Safely retrieve the product-id

    try {
      const response = await fetch(`/product/${productId}/submit-review`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ rating, review })
      });

      if (response.ok) {
        alert('Thank you for your review!');
      } else {
        alert('Error submitting review');
      }
    } catch (error) {
      console.error('Error:', error);
    }
  });
}
//Wishlist
document.addEventListener('DOMContentLoaded', () => {
    fetch('/wishlist/count')
        .then(response => response.json())
        .then(data => {
            const wishlistCountElement = document.getElementById('wishlist-count');
            wishlistCountElement.innerText = data.wishlistCount || 0;
        })
        .catch(error => console.error('Error fetching wishlist count:', error));
});


function toggleWishlist(button, productId) {
    const isInWishlist = button.classList.contains('active');

    if (!isInWishlist) {
        console.log('Adding to wishlist...');

        fetch('/wishlist/add', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ productId })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                button.classList.add('active');
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: 'Product added to wishlist successfully!',
                    showConfirmButton: false,
                    timer: 1500
                }).then(() => {
                    // Update the wishlist count using the value returned from the server
                    const wishlistCountElement = document.getElementById('wishlist-count');
                    wishlistCountElement.innerText = data.wishlistCount || 0;
                    console.log('Wishlist count updated:', data.wishlistCount); // Debugging log
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.message || 'Failed to add product to wishlist',
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An unexpected error occurred. Please try again later.',
            });
        });

    } else {
        Swal.fire({
            title: 'Are you sure?',
            text: "Do you want to remove this product from your wishlist?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, remove it!'
        }).then((result) => {
            if (result.isConfirmed) {
                console.log('Removing from wishlist...');

                fetch('/wishlist/remove', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        button.classList.remove('active');
                        Swal.fire({
                            icon: 'success',
                            title: 'Removed!',
                            text: 'Product has been removed from your wishlist.',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            // Update the wishlist count using the value returned from the server
                            const wishlistCountElement = document.getElementById('wishlist-count');
                            wishlistCountElement.innerText = data.wishlistCount || 0;
                            console.log('Wishlist count updated:', data.wishlistCount); // Debugging log
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message || 'Failed to remove product from wishlist',
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An unexpected error occurred. Please try again later.',
                    });
                });
            }
        });
    }
}


//review modal
// Function to toggle 'More' and 'Less' reviews
function toggleReviews(showMore) {
  const allReviews = document.getElementById("all-reviews");
  const moreLink = document.getElementById("more-link");
  const lessLink = document.getElementById("less-link");

  if (showMore) {
    allReviews.style.display = "block";
    moreLink.style.display = "none";
    lessLink.style.display = "inline";
  } else {
    allReviews.style.display = "none";
    moreLink.style.display = "inline";
    lessLink.style.display = "none";
  }
}

// Get modal elements
const modal = document.getElementById("reviewModal");
const openModalBtn = document.getElementById("openReviewModal");
const closeModalBtn = document.getElementsByClassName("close")[0];

// Open the modal
openModalBtn.onclick = function () {
  modal.style.display = "block";
}

// Close the modal when clicking the close button
closeModalBtn.onclick = function () {
  modal.style.display = "none";
}

// Close the modal when clicking outside of the modal
window.onclick = function (event) {
  if (event.target == modal) {
    modal.style.display = "none";
  }
}

// Handle review form submission
document.getElementById("review-form").addEventListener("submit", function (e) {
  e.preventDefault();
  alert("Review submitted successfully!");
  // Perform actual submission (e.g., using fetch or AJAX)
  modal.style.display = "none"; // Close modal after submission
});

</script>

  </script>
  <script src="../../js/jquery-1.12.1.min.js"></script>
  <!-- popper js -->
  <script src="../../js/popper.min.js"></script>
  <!-- bootstrap js -->
  <script src="../../js/bootstrap.min.js"></script>
  <!-- easing js -->
  <script src="js/jquery.magnific-popup.js"></script>
  <!-- swiper js -->
  <script src="../../js/lightslider.min.js"></script>
  <!-- swiper js -->
  <script src="../../js/masonry.pkgd.js"></script>
  <!-- particles js -->
  <script src="../../js/owl.carousel.min.js"></script>
  <script src="../../js/jquery.nice-select.min.js"></script>
  <!-- slick js -->
  <script src="../../js/slick.min.js"></script>
  <script src="../../js/swiper.jquery.js"></script>
  <script src="../../js/jquery.counterup.min.js"></script>
  <script src="../../js/waypoints.min.js"></script>
  <script src="../../js/contact.js"></script>
  <script src="../../js/jquery.ajaxchimp.min.js"></script>
  <script src="../../js/jquery.form.js"></script>
  <script src="../../js/jquery.validate.min.js"></script>
  <script src="../../js/mail-script.js"></script>
  <script src="../../js/stellar.js"></script>
  <!-- custom js -->
  <script src="../../js/theme.js"></script>
  <script src="../../js/custom.js"></script>

  <!-- custom for images -->
  <script>
    function changeImage(image) {
        document.getElementById('currentImage').src = image;
    }
</script>
<!-- Initialize jQuery Zoom -->
<script>
  $(document).ready(function() {
      $('#mainImage').zoom(
        {
            magnify: 2 // Adjust magnification factor (e.g., 2 for twice the normal size)
        }
      );
  });

  function changeImage(image) {
      $('#currentImage').attr('src', image).data('zoom-image', image);
      $('#mainImage').trigger('zoom.destroy').zoom(
        {
            magnify: 2 // Adjust magnification factor
        }
      );
  }

 
</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- jQuery Zoom -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-zoom/1.7.21/jquery.zoom.min.js"></script>
</body>

</html>