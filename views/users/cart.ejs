<!doctype html>
<html lang="zxx">

<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>aranaz</title>
  <link rel="icon" href="img/favicon.png">
  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="css/bootstrap.min.css">
  <!-- animate CSS -->
  <link rel="stylesheet" href="css/animate.css">
  <!-- owl carousel CSS -->
  <link rel="stylesheet" href="css/owl.carousel.min.css">
  <!-- nice select CSS -->
  <link rel="stylesheet" href="css/nice-select.css">
  <!-- font awesome CSS -->
  <link rel="stylesheet" href="css/all.css">
  <!-- flaticon CSS -->
  <link rel="stylesheet" href="css/flaticon.css">
  <link rel="stylesheet" href="css/themify-icons.css">
  <!-- font awesome CSS -->
  <link rel="stylesheet" href="css/magnific-popup.css">
  <!-- swiper CSS -->
  <link rel="stylesheet" href="css/slick.css">
  <link rel="stylesheet" href="css/price_rangs.css">
  <!-- style CSS -->
  <link rel="stylesheet" href="css/style.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

  <style>
    .product_count {
    display: flex;
    align-items: center;
  }

  .input-group-prepend, .input-group-append {
  margin: 0;
  }

  .btn-outline-black {
  border: 1px solid #000;
  background-color: transparent;
  color: #000;
  padding: 0.5rem 0.75rem;
  display: flex;
  align-items: center;
  justify-content: center;
  }

  .btn-outline-black.decrease {
  border-top-left-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
  }

  .btn-outline-black.increase {
  border-top-right-radius: 0.25rem;
  border-bottom-right-radius: 0.25rem;
  }

/* Ensure the remove button is always visible in responsive views */
@media (max-width: 768px) {
    .cart_inner table td button.btn_1 {
        display: block;
        margin-top: 10px;
        width: 100%; /* Make the remove button take up the full width on small screens */
    }

    .cart_inner .media {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
    }

    .cart_inner .media img {
        margin-bottom: 10px; /* Add space between the image and product details */
    }

    .cart_inner table td h5 {
        text-align: center;
    }

    .checkout_btn_inner {
        text-align: center;
    }
}


  </style>
</head>

<body>
  <%- include('header') %>
    <!--================Cart Area =================-->
    <section class="cart_area padding_top">
      
      <div class="container">
        <div class="cart_inner">
          <div class="table-responsive">
            <table class="table">
              <thead>
                <tr>
                  <th scope="col">Product</th>
                  <th scope="col">Price</th>
                  <th scope="col">Quantity</th>
                  <th scope="col">Total</th>
                  <th scope="col">Remove</th>
                </tr>
              </thead>
             <tbody>
              <% cartItems.forEach(item => { %>
                <tr>
                  <td>
                    <div class="media">
                      <div class="d-flex">
                        <!-- Adjust the height and width for the image -->
                        <img src="<%= item.product.productImage[0] %>" alt="<%= item.product.productName %>" style="height: 100px; width: 100px;" />
                      </div>
                      <div class="media-body">
                        <p><%= item.product.productName %></p>
                        <% if (item.product.quantity === 0) { %>
                          <p style="color: red;">Out of stock</p>
                        <% } %>
                      </div>
                    </div>
                  </td>
                  <td>
                    <h5>$<%= item.product.salePrice %></h5>
                  </td>
                  <td>
                    <div class="product_count">
                      <div class="input-group-prepend">
                        <button class="btn btn-outline-black decrease" type="button" title="Decrease quantity" onclick="updateQuantity('<%= item.product._id %>', 'decrement')">&minus;</button>
                        <input type="number" class="form-control text-center quantity-amount" name="quantity" size="5" id="quantity-<%= item.product._id %>" value="1" min="1" max="<%= item.product.quantity %>" aria-label="Quantity" readonly>
                        <button class="btn btn-outline-black increase" type="button" title="Increase quantity" onclick="updateQuantity('<%= item.product._id %>', 'increment')">&plus;</button>
                      </div>
                    </div>
                  </td>
                  <td>
                    <h5><span id="total-<%= item.product._id %>"><%= item.product.salePrice * item.quantity %></span></h5>
                  </td>
                  <td>
                    <button class="btn_1" onclick="removeFromCart('<%= item.product._id %>')"> <i class="fas fa-trash-alt remove-btn"></i></button>
                  </td>
                  
                </tr>
                <% }) %>
             </tbody>
            </table>
            <div class="checkout_btn_inner float-right">
              <a class="btn_1" href="/shop">Continue Shopping</a>
              <a class="btn_1 checkout_btn_1" href="/checkOut">Proceed to checkout</a>
            </div>
          </div>
        </div>
      </div>
    </section>
  <!--================End Cart Area =================-->

  <%- include('footer') %>


  <!-- jquery plugins here-->
  <!-- jquery -->
  <script src="js/jquery-1.12.1.min.js"></script>
  <!-- popper js -->
  <script src="js/popper.min.js"></script>
  <!-- bootstrap js -->
  <script src="js/bootstrap.min.js"></script>
  <!-- easing js -->
  <script src="js/jquery.magnific-popup.js"></script>
  <!-- swiper js -->
  <script src="js/swiper.min.js"></script>
  <!-- swiper js -->
  <script src="js/masonry.pkgd.js"></script>
  <!-- particles js -->
  <script src="js/owl.carousel.min.js"></script>
  <script src="js/jquery.nice-select.min.js"></script>
  <!-- slick js -->
  <script src="js/slick.min.js"></script>
  <script src="js/jquery.counterup.min.js"></script>
  <script src="js/waypoints.min.js"></script>
  <script src="js/contact.js"></script>
  <script src="js/jquery.ajaxchimp.min.js"></script>
  <script src="js/jquery.form.js"></script>
  <script src="js/jquery.validate.min.js"></script>
  <script src="js/mail-script.js"></script>
  <script src="js/stellar.js"></script>
  <script src="js/price_rangs.js"></script>
  <!-- custom js -->
  <script src="js/custom.js"></script>
 

   <!-- Place JavaScript functions at the end of the body -->
   <script>
    
  function updateQuantity(productId, action) {
    console.log('updateQuantity called'); // Debug statement
    console.log('Product ID:', productId); // Debug statement
    console.log('Action:', action); // Debug statement
    
    const quantityInput = document.getElementById(`quantity-${productId}`);
    const totalElement = document.getElementById(`total-${productId}`);
    let quantity = parseInt(quantityInput.value);
    const maxQuantity = parseInt(quantityInput.max);
    if (action === 'increment') {
      if (quantity < maxQuantity) {
        quantity++;
      } else {
        Swal.fire({
                icon: 'error',
                title: 'Oops',
                text: 'Quantity maximum reached !',
        });
        return; // Exit the function without making the fetch call
      }
    } else if (action === 'decrement' && quantity > 1) {
      quantity--;
    }


    document.addEventListener('DOMContentLoaded', () => {
            fetch('/cart/count')
                .then(response => response.json())
                .then(data => {
                    const cartCountElement = document.getElementById('cart-count');
                    cartCountElement.innerText = data.cartCount || 0;
                })
                .catch(error => console.error('Error fetching cart count:', error));
        });
    fetch(`/update-cart/${productId}`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ productId,quantity })
  })
  .then(response => {
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    return response.json();
  })
  .then(data => {
    if (data.success) {
      console.log('Quantity update successful');
        quantityInput.value = quantity;
        totalElement.textContent = (quantity * data.product.price).toFixed(2)
    } else {
      console.error('Failed to update quantity');
      alert('Failed to update quantity');
    }
  })
  .catch(error => {
    console.error('Error:', error);
    alert('An error occurred: ' + error.message);
  });
    }
    function removeFromCart(productId) {
      Swal.fire({
            title: 'Are you sure?',
            text: "Do you want to remove this product from your wishlist?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, remove it!'
      }).then((result) => {
            if (result.isConfirmed) {
    fetch('/cart/remove', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ productId })
    })
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      return response.json();
    })
    .then(data => {

        if (data.success) {
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'Product removed from cart !',
                showConfirmButton: false,
                timer: 1500
            }).then(() => {
              const cartCountElement = document.getElementById('cart-count');
              cartCountElement.innerText = data.cartCount || 0;
              window.location.reload()
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Failed to remove product from cart',
            });
        }
    })
    .catch(error => console.error('Error:', error));
  }
  });
}
     
  </script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

</body>

</html>