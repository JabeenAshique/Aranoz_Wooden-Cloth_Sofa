<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Order History</title>
  <link rel="stylesheet" href="/css/bootstrap.min.css">
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/css/all.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <!-- flaticon CSS -->
    <link rel="stylesheet" href="css/flaticon.css">
    <link rel="stylesheet" href="css/themify-icons.css">
    <!-- font awesome CSS -->
    <link rel="stylesheet" href="css/magnific-popup.css">
  <style>
       body {
      background-color: #ffffff;
    }
    .container {
      margin-top: 20px;
    }
    .order-summary {
      background-color: #e9e8e8;
      color: #000;
      padding: 20px;
      border-radius: 8px;
      margin-bottom: 20px;
    }
    .order-item {
      background-color: #e9e8e8;
      padding: 15px;
      border-radius: 8px;
      margin-bottom: 15px;
      display: flex;
      align-items: center;
    }
    .order-item img {
      width: 120px;
      height: auto;
      margin-right: 20px;
      border-radius: 4px;
    }
    .order-item-details {
      flex-grow: 1;
    }
    .order-actions {
      display: flex;
      justify-content: flex-start;
      margin-top: 15px;
    }
    .order-actions button {
      margin-right: 10px;
    }
    .total-paid {
     
      padding: 15px;
      text-align: center;
      border-radius: 4px;
    }
    .status-cancelled {
      color: red;
      font-weight: bold;
    }
  </style>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
</head>
</head>
<body>
  <%- include('header') %>
    <!-- Header part end-->
    <div class="container padding_top">
      <div class="container">
        <!-- Order Summary Section -->
        <div class="row order-item">
          <!-- Left Column for Shipping Details -->
          <div class="col-md-6">
            <h5>Shipping Details</h5>
            <p><strong>Recipient:</strong> <%= order.address.name %></p>
            <p><strong>Address:</strong> <%= order.address.street %>, <%= order.address.city %>, <%= order.address.state %> - <%= order.address.zipcode %></p>
            <p><strong>Phone:</strong> <%= order.address.phone %></p>
          </div>
    
          <!-- Right Column for Order Details -->
          <div class="col-md-6 order-details">
            <h5>Order ID: <%= order._id %></h5>
            <p>Order Status: <span class="<%= order.status === 'Cancelled' ? 'status-cancelled' : '' %>"><%= order.status %></span></p>
            <p>Order Total: ₹<%= order.totalPrice %></p>
            <% if (order.status === 'Delivered') { %>
              <button class="btn btn-secondary download-invoice-btn" data-order-id="<%= order._id %>">Download Invoice </button>
                <% } %>
            
            
          </div>
        </div>
    
        <!-- Loop through Ordered Items -->
        <% order.orderedItems.forEach((item, index) => { %>
          <div class="order-item row">
            <div class="col-md-2">
              <img src="<%= item.product.productImage[0] %>" alt="<%= item.product.productName %>">
            </div>
            <div class="col-md-6 order-details">
              <h6><%= item.product.productName %></h6>
              <p>Qty: <%= item.quantity %> | Price: ₹<%= item.price %></p>
              <p>Order Status: <%= item.status %></p>
              <div class="order-status">
                <h5>Payment Status: 
                  <span class="<%= order.paymentStatus === 'Failed' ? 'text-danger' : 'text-success' %>">
                    <%= order.paymentStatus %>
                  </span>
                </h5>
                </div>
                <!-- Show the Retry Payment button if the payment failed -->
                <% if (order.paymentStatus === 'Failed') { %>
                  <button class="btn btn-primary" id="retryPaymentButton" onclick="retryPayment('<%= order._id %>', '<%= order.razorpayOrderId %>')">
                    Retry Payment
                  </button>
                <% } %>
            </div>
            
            <div class="col-md-6 order-actions">
              <div class="order-actions">
                <% if (order.paymentStatus !== 'Failed') { %> 
                <% if (order.status === 'Pending') { %>
                  <button class="btn btn_3 cancel-button" onclick="showCancelModal('<%= order.orderId %>', <%= JSON.stringify(order.orderedItems) %>)">Cancel Order</button>

                <% } else if (order.status === 'Delivered') { %>
                  <button class="btn btn_3 cancel-button" onclick="showReturnModal('<%= order.orderId %>', <%= JSON.stringify(order.orderedItems) %>)">Return Order</button>

                       <!-- // <button class="btn return-button" onclick="confirmReturn('<%= order.orderId %>')">Return Order</button> -->
                    
                <% } %>
                <% } %>
            </div>
            </div>
          </div>
        <% }) %>
    
        <!-- Total Paid Section -->
        <div class="total-paid btn-secondary">
          <h6>Total Paid: ₹<%= order.totalPrice %></h6>
        </div>
      </div>
    
          <!-- Cancel Modal -->
          <div id="cancelOrderModal" class="modal fade" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title">Select Items to Cancel</h5>
                  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span>&times;</span>
                  </button>
                </div>
                <div class="modal-body">
                  <form id="cancelOrderForm">
                    <% order.orderedItems.forEach(item => { %>
                      <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="<%= item.product._id %>" id="product_<%= item.product._id %>" name="products">
                        <label class="form-check-label" for="product-<%= item.product._id %>">
                          <%= item.product.productName %> (Quantity: <%= item.quantity %>)
                        </label>
                      </div>
                    <% }) %>
                    
                  </form>
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-danger" onclick="confirmCancel('<%= order._id %>')">Cancel Selected Items</button>
                  <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
              </div>
            </div>
          </div>
        <!-- Return Modal -->
        <div id="returnOrderModal" class="modal fade" tabindex="-1" role="dialog">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title">Select Items to Return</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span>&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <form id="returnOrderForm">
                  <!-- Dynamic content will be injected here -->
                </form>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-danger" onclick="confirmReturn('<%= order._id %>')">Return Selected Items</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
              </div>
            </div>
          </div>
        </div>
        
          </div>
          
      </div>
    </div>
  </div>
</section>

<%- include('footer') %>
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="/js/jquery-3.5.1.min.js"></script>
<script src="/js/bootstrap.bundle.min.js"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
    document.querySelectorAll('.download-invoice-btn').forEach(button => {
    button.addEventListener('click', function() {
      const orderId = this.getAttribute('data-order-id'); // Get the order ID from the button attribute

      // Fetch the invoice as a PDF from the server
      fetch(`/download-invoice/${orderId}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        }
      })
      .then(response => response.blob())
      .then(blob => {
        // Create a URL for the blob and create a temporary link
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `invoice_${orderId}.pdf`; // Set the filename for the download
        document.body.appendChild(a); // Append the link to the body
        a.click(); // Programmatically click the link to trigger download
        a.remove(); // Remove the link after the download is triggered
      })
      .catch(error => console.error('Error downloading the invoice:', error));
    });
  });
  // cancel modal function
  function showCancelModal(orderId, orderedItems) {
  if (!Array.isArray(orderedItems)) {
    console.error('orderedItems is not an array:', orderedItems);
    return;
  }

  const modalBody = document.querySelector('#cancelOrderForm');
  modalBody.innerHTML = ''; // Clear the existing content

  // Populate the form with checkboxes for each item
  orderedItems.forEach(item => {
    const checkbox = `
      <div class="form-check">
        <input class="form-check-input" type="checkbox" value="${item.product._id}" id="product_${item.product._id}" name="products">
        <label class="form-check-label" for="product_${item.product._id}">
          ${item.product.productName} (Quantity: ${item.quantity})
        </label>
      </div>`;
    modalBody.insertAdjacentHTML('beforeend', checkbox);
  });

  // Show the modal
  $('#cancelOrderModal').modal('show');
}
// Return modal function
function showReturnModal(orderId, orderedItems) {
  if (!Array.isArray(orderedItems)) {
    console.error('orderedItems is not an array:', orderedItems);
    return;
  }

  const modalBody = document.querySelector('#returnOrderForm');
  modalBody.innerHTML = ''; // Clear the existing content

  // Populate the form with checkboxes for each item
  orderedItems.forEach(item => {
    const checkbox = `
      <div class="form-check">
        <input class="form-check-input" type="checkbox" value="${item.product._id}" id="product_${item.product._id}" name="products">
        <label class="form-check-label" for="product_${item.product._id}">
          ${item.product.productName} (Quantity: ${item.quantity})
        </label>
      </div>`;
    modalBody.insertAdjacentHTML('beforeend', checkbox);
  });

  // Show the modal
  $('#returnOrderModal').modal('show');
}
function confirmReturn(orderId) {
  // Get all selected checkboxes (products to return)
  const selectedProductIds = Array.from(document.querySelectorAll('#returnOrderForm .form-check-input:checked'))
    .map(checkbox => checkbox.value);

  if (selectedProductIds.length === 0) {
    alert('Please select at least one product to return.');
    return;
  }

  Swal.fire({
    title: 'Are you sure?',
    text: "Do you really want to return these products?",
    icon: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#d33',
    cancelButtonColor: '#3085d6',
    confirmButtonText: 'Yes, return it!'
  }).then((result) => {
    if (result.isConfirmed) {
      // Make a POST request to return the selected items
      fetch(`/return/${orderId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ productIds: selectedProductIds })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          Swal.fire('Returned!', 'Your products have been returned.', 'success');
          location.reload();
        } else {
          Swal.fire('Error!', 'Failed to return the products.', 'error');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        Swal.fire('Error!', 'An error occurred. Please try again.', 'error');
      });
    }
  });
}

function confirmCancel(orderId) {
  // Get all selected checkboxes (products to cancel)
  const selectedProductIds = Array.from(document.querySelectorAll('.form-check-input:checked'))
  .map(checkbox => checkbox.value);


  console.log('Selected Product IDs:', selectedProductIds); // Debugging output

  

  Swal.fire({
      title: 'Are you sure?',
      text: "Do you really want to cancel this order?",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
      confirmButtonText: 'Yes, cancel it!'
  }).then((result) => {
      if (result.isConfirmed) {
          // Make a POST request to cancel the order
          fetch(`/cancel/${orderId}`, {
              method: 'POST',
              headers: {
                  'Content-Type': 'application/json'
              },
              body: JSON.stringify({ productIds: selectedProductIds }) 
          })
          .then(response => response.json())
          .then(data => {
              if (data.success) {
                  Swal.fire('Cancelled!', 'Your order has been cancelled.', 'success');
                  // Redirect or refresh the page
                  location.reload();
              } else {
                  Swal.fire('Error!', 'Failed to cancel the order.', 'error');
              }
          })
          .catch(error => {
              console.error('Error:', error);
              Swal.fire('Error!', 'An error occurred. Please try again.', 'error');
          });
      }
  });
}
  function retryPayment(orderId,razorpayOrderId) {
    fetch(`/order/${orderId}/retryPayment`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ razorpayOrderId })
    })
    .then((response) => response.json())
    .then((data) => {
      if (data.success) {
        var options = {
          key: data.key,
          amount: data.amount,  
          currency: data.currency,
          name: data.name,
          order_id: data.razorpayOrderId,  
          handler: function (response) {
            console.log('Razorpay Success Response:', response);           
            finalizereOrderPlacement(orderId, 'razorpay', 'Success', data.razorpayOrderId, response.razorpay_payment_id);
          },
          modal: {
            ondismiss: function () {
              console.log('Razorpay Modal Dismissed');
              finalizereOrderPlacement(orderId, 'razorpay', 'Failed', data.razorpayOrderId);
            },
          },
        };
        var rzp1 = new Razorpay(options);
        rzp1.open();  // Open the Razorpay payment modal
      } else {
        alert('Failed to initiate repayment. Please try again.');
      }
    })
    .catch((error) => {
      console.error('Error:', error);
      alert('An error occurred. Please try again.');
    });
  }

  function finalizereOrderPlacement(orderId, paymentMethod, paymentStatus, razorpayOrderId, razorpayPaymentId = null) {
    const orderData = {
      payment: paymentMethod,
      paymentStatus: paymentStatus,
      razorpayOrderId: razorpayOrderId,
      razorpayPaymentId: razorpayPaymentId,
      
    };
    console.log('Finalizing Order Placement:', orderData); 
    fetch(`/order/${orderId}/retryplaceOrder`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(orderData),
    })
    .then((response) => response.json())
    .then((data) => {
      console.log(`Order Placed Data: data`)
      if (data.success) {
        window.location.href = `/success?orderId=${data.orderId}&paymentStatus=${paymentStatus}`;
      } else {
        alert('Failed to finalize the order. Please try again.');
      }
    })
    .catch((error) => {
      console.error('Error:', error);
      alert('An error occurred. Please try again.');
    });
  }


</script>

</body>
</html>